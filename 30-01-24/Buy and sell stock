You are given an array prices where prices[i] is the price of a given stock on the ith day.

You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.

 

Example 1:

Input: prices = [7,1,5,3,6,4]
Output: 5
Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.
Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.
Example 2:

Input: prices = [7,6,4,3,1]
Output: 0
Explanation: In this case, no transactions are done and the max profit = 0.
 

Constraints:

1 <= prices.length <= 105
0 <= prices[i] <= 104
Seen this question in a real interview before?  
Subscribe to see which companies asked this question.

Related Topics 

Similar Questions 
Maximum SubarrayBest Time to Buy and Sell Stock IIBest Time to Buy and Sell Stock IIIBest Time to Buy and Sell Stock IVBest Time to Buy and Sell Stock with CooldownSum of Beauty in the ArrayMaximum Difference Between Increasing ElementsMaximum Profit From Trading Stocks
Py	
1
class Solution(object):
2

3
    def maxProfit(self, prices):
4

5
        buy = prices[0]
6

7
        max_profit = 0
8

9
        for sell in prices:
10

11
            if buy > sell:
12

13
                buy = sell
14

15
            profit = sell - buy
16

17
            if profit > max_profit:
18

19
                max_profit = profit
20

21
        return max_profitï¿¼Enter
